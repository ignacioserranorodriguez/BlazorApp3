@page "/devices/details"

@using Microsoft.EntityFrameworkCore
@using BlazorApp3.Models
@inject IDbContextFactory<BlazorApp3.Data.BlazorApp3Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Device</h4>
    <hr />
    @if (device is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@device.Name</dd>
            <dt class="col-sm-2">Ip</dt>
            <dd class="col-sm-10">@device.Ip</dd>
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@device.Status</dd>
        </dl>
        <div>
            <a href="@($"/devices/edit?id={device.Id}")">Edit</a> |
            <a href="@($"/devices")">Back to List</a>
        </div>
    }
</div>

@code {
    Device? device;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        device = await context.Device.FirstOrDefaultAsync(m => m.Id == Id);

        if (device is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
