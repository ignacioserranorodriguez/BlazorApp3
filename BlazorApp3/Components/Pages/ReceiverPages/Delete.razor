@page "/receivers/delete"

@using Microsoft.EntityFrameworkCore
@using BlazorApp3.Models
@inject IDbContextFactory<BlazorApp3.Data.BlazorApp3Context> DbFactory
@inject NavigationManager NavigationManager


<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Receiver</h4>
    <hr />
    @if (receiver is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">TransmitterId</dt>
            <dd class="col-sm-10">@receiver.TransmitterId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@receiver.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Ip</dt>
            <dd class="col-sm-10">@receiver.Ip</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">
                @{
                    string statusText = receiver.Status switch
                    {
                        0 => "Apagado",
                        1 => "Encendido",
                        2 => "Espera",
                        _ => "Unknown"
                    };
                }
                @statusText
            </dd>
        </dl>
        <EditForm method="post" Model="receiver" OnValidSubmit="DeleteReceiver" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(receiver is null)">Delete</button> |
            <a href="/administrador">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Receiver? receiver;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        receiver = await context.Receiver.FirstOrDefaultAsync(m => m.Id == Id);

        if (receiver is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteReceiver()
    {
        using var context = DbFactory.CreateDbContext();
        context.Receiver.Remove(receiver!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/administrador");
    }
}
